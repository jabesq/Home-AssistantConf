homeassistant:
    # Name of the location where Home Assistant is running
    name: Home
    # C for Celcius, F for Fahrenheit
    temperature_unit: C
    unit_system: metric
    # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    time_zone: Europe/Paris
    #location required to calculate the time the sun rises and sets
    latitude: !secret home_latitude
    longitude: !secret home_longitude
    elevation: 0
    packages: !include_dir_named packages
    customize: !include customize.yaml
    customize_glob:
        "sensor.*_sourcenodeid":
            hidden: true
        "sensor.*_alarm_level":
            hidden: true
        "sensor.*_alarm_type":
            hidden: true
    customize_domain:
        automation:
            initial_state: 'on'

cloud:

config:

map:

influxdb:
    host: 192.168.1.20

http:
    api_password: !secret api_password
    base_url: !secret base_url
    use_x_forwarded_for: True
    trusted_networks:
      - 127.0.0.1
      - ::1
      - 192.168.1.0/24
      - 10.8.0.0/24
    ip_ban_enabled: True
    login_attempts_threshold: 3

#Geofencing setup
zone:
    name: work
    latitude: !secret work_latitude
    longitude: !secret work_longitude
    radius: 100
    icon: mdi:briefcase

# Track the sun
sun:

recorder:
    db_url: postgres://@/hass
    include:
        domains:
          - climate
          - automation
          - binary_sensor
          - sensor
          - light
          - device_tracker
          - alarm_control_panel
          - proximity
          - sun
          - input_boolean
    exclude:
        entities:
          - sensor.yr_symbol
          - sensor.time
          - sensor.pws_alerts
          - sensor.pws_precip_1d
          - sensor.pws_precip_1d_mm
          - sensor.pws_temp_c
          - sensor.pws_temp_high_1d_c
          - sensor.pws_temp_high_record_c
          - sensor.pws_temp_low_1d_c
          - sensor.pws_temp_low_record_c
          - sensor.pws_weather_1d_metric
          - sensor.pws_weather_1n_metric
          - sensor.pws_weather_2d_metric
          - sensor.pws_weather_2n_metric
          - sensor.pws_weather_3d_metric
          - sensor.pws_weather_3n_metric
          - sensor.pws_weather_4d_metric
          - sensor.pws_weather_4n_metric
          - sensor.pws_wind_1d_kph
          - sensor.pws_wind_kph

# Enables support for tracking state changes over time.
history:
    exclude:
        domains:
          - automation
          - sun

logbook:

# Enables the frontend
frontend:

# Checks for available updates
updater:

# Discover some devices automatically
discovery:

#Zeroconf/Avahi/Bonjour
zeroconf:

#FFmpeg
ffmpeg:
    ffmpeg_bin: /usr/bin/ffmpeg

hue:

ios:
    push:
        categories:
          - name: alarm
            identifier: 'camera'
            actions:
              - identifier: 'FIRE_ALARM'
                title: 'Activer Alarme'
                activationMode: 'background'
                authenticationRequired: no
                destructive: yes
              - identifier: 'CANCEL_ALARM'
                title: 'Désactiver Alarme'
                activationMode: 'background'
                authenticationRequired: no
                destructive: yes

#Notifier
notify:
  - platform: pushbullet
    api_key: !secret pushbullet_api_key
    name: pushbullet
  - platform: ios
    name: iOSApp

#IFTTT
ifttt:
    key: !secret ifttt_key

#Detect all device on network + my iCloud device + OwnTracks User (MQTT)
device_tracker:
  - platform: owntracks
    max_gps_accuracy: 150
    new_device_defaults:
      track_new_devices: False
      hide_if_away: False
  - platform: asuswrt
    host: !secret asuswrt_host
    username: !secret asuswrt_username
    password: !secret asuswrt_password

proximity:
    home:
        tolerance: 50
        devices:
          - device_tracker.hugo_iphone

alarm_control_panel:
    platform: manual
    pending_time: 30

media_player:
    platform: cast
    ignore_cec:
      - '*'

apple_tv:
    host: !secret apple_tv_ip
    login_id: !secret apple_tv_id
    start_off: true

alexa:
    smart_home:
        filter:
            include_domains:
              - cover
            include_entities:
              - input_boolean.appletv
              - input_boolean.ps4
              - input_boolean.switch
              - input_boolean.babyphone_chambre
              - media_player.apple_tv
              - sensor.netatmo_station_temperature
              - switch.fibaro_system_fgwpef_wall_plug_gen5_switch
        entity_config:
            media_player.apple_tv:
                name: Télévision
            switch.fibaro_system_fgwpef_wall_plug_gen5_switch:
                name: Arbre
                description: Arbre de Lumière
            input_boolean.appletv:
                name: Apple TV
                description: Apple TV du Salon (via Harmony)
                display_categories: ACTIVITY_TRIGGER
            input_boolean.ps4:
                name: Playstation
                description: Active Playstation 3/4 (via Harmony)
                display_categories: ACTIVITY_TRIGGER
            input_boolean.switch:
                name: Switch
                description: Nintendo Switch
                display_categories: ACTIVITY_TRIGGER
            input_boolean.babyphone_chambre:
                name: Babyphone
            cover.volet_chambre_amis:
                name: Volet Zelda
                description: Volet de la chambre d'amis
            cover.volet_cuisine:
                name: Volet Cuisine
                description: Volet de la cuisine
            cover.volet_salon:
                name: Volet Salon
                description: Volet du Salon
            cover.tous_les_volets:
                name: Tous les volets
                description: Tous les volets (Salon + Cuisine + Chambre amis)
            sensor.netatmo_station_temperature:
                name: Température salon

intent_script:
    RemoteIntent:
        async_action: True
        action:
          - service_template: >
                {% macro run_script(button) %}
                    {% if button=='haut' %}
                        script.apple_tv_up
                    {% elif button=='bas' %}
                        script.apple_tv_down
                    {% elif button=='gauche' %}
                        script.apple_tv_left
                    {% elif button=='droite' %}
                        script.apple_tv_right
                    {% elif button=='menu' %}
                        script.apple_tv_menu
                    {% elif button=='menu principal' %}
                        script.apple_tv_top_menu
                    {% elif button=='lecture' %}
                        script.apple_tv_play
                    {% elif button=='pause' %}
                        script.apple_tv_pause
                    {% elif button=='entrer' %}
                        script.apple_tv_select
                    {% endif %}
                {% endmacro %}
                {{ run_script(button_one) }}
          - service_template: >
                {% macro run_script(button) %}
                    {% if button=='haut' %}
                        script.apple_tv_up
                    {% elif button=='bas' %}
                        script.apple_tv_down
                    {% elif button=='gauche' %}
                        script.apple_tv_left
                    {% elif button=='droite' %}
                        script.apple_tv_right
                    {% elif button=='menu' %}
                        script.apple_tv_menu
                    {% elif button=='menu principal' %}
                        script.apple_tv_top_menu
                    {% elif button=='lecture' %}
                        script.apple_tv_play
                    {% elif button=='pause' %}
                        script.apple_tv_pause
                    {% elif button=='entrer' %}
                        script.apple_tv_select
                    {% endif %}
                {% endmacro %}
                {% if button_two %}
                    {{ run_script(button_two) }}
                {% else %}
                    None
                {% endif %}
          - service_template: >
                {% macro run_script(button) %}
                    {% if button=='haut' %}
                        script.apple_tv_up
                    {% elif button=='bas' %}
                        script.apple_tv_down
                    {% elif button=='gauche' %}
                        script.apple_tv_left
                    {% elif button=='droite' %}
                        script.apple_tv_right
                    {% elif button=='menu' %}
                        script.apple_tv_menu
                    {% elif button=='menu principal' %}
                        script.apple_tv_top_menu
                    {% elif button=='lecture' %}
                        script.apple_tv_play
                    {% elif button=='pause' %}
                        script.apple_tv_pause
                    {% elif button=='entrer' %}
                        script.apple_tv_select
                    {% endif %}
                {% endmacro %}
                {% if button_three %}
                    {{ run_script(button_three) }}
                {% else %}
                    None
                {% endif %}
        speech:
            type: plain
            text: OK
    VolumeUpIntent:
        async_action: True
        action:
          - service: remote.send_command
            data_template:
                entity_id: remote.harmony_hub
                device: 36884492
                command:
                  - VolumeUp
                num_repeats: >
                    {{ volume | int * 2 }}
        speech:
            type: plain
            text: OK
    VolumeDownIntent:
        async_action: True
        action:
          - service: remote.send_command
            data_template:
                entity_id: remote.harmony_hub
                device: 36884492
                command:
                  - VolumeDown
                num_repeats: >
                    {{ volume | int * 2 }}
        speech:
            type: plain
            text: OK

input_boolean:
    lumiere_entree_auto:
    guest_mode:
        name: Mode Invité
        icon: mdi:account-multiple

#Sensors
sensor: !include sensors.yaml
binary_sensor: !include binary_sensors.yaml

group: !include_dir_merge_named groups/

automation old: !include_dir_merge_list automations/
automation: !include automations.yaml
script: !include scripts.yaml
